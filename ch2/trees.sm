#lang sicp
(define (atom? x)
  (and (not (null? x))
       (not (pair? x))))

(define (append list1 list2)
   (if (null? list1)
       list2
       (cons (car list1) (append (cdr list1) list2))))

(define (deep-reverse x)
  (if (pair? x)
      (append (deep-reverse (cdr x))
              (list (deep-reverse (car x))))
      x))
(define (fringe x) 
  (cond ((null? x) x) 
        ((number? x) (list x)) 
        (else (append (fringe (car x)) 
                    (fringe (cdr x)))))) 

(define x (cons (list 1 2) (list 3 4)))
(fringe (cons x x))
