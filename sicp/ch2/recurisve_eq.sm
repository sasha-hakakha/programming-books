#lang sicp
(define (atom? x)
  (not (or
        (pair? x)
        (null? x))))
(define (length x)
  (if (null? x)
      0
      (+ 1 (length (cdr x)))))


(define (recursive-eq? a b)
  (if (or (null? a) (null? b))
      (and (null? a) (null? b))
      (and (eq? (car a) (car b))
           (recursive-eq? (cdr a) (cdr b)))))
